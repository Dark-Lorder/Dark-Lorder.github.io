<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Docker容器简介</title>
    <link href="/2022/09/02/Introduction-to-Docker-Containers/"/>
    <url>/2022/09/02/Introduction-to-Docker-Containers/</url>
    
    <content type="html"><![CDATA[<p>Docker容器简介</p><span id="more"></span><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker</title>
    <link href="/2022/09/01/Install-Docker/"/>
    <url>/2022/09/01/Install-Docker/</url>
    
    <content type="html"><![CDATA[<p>关于 Docker安装部署</p><span id="more"></span><h2 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h2><p>目前，Docker支持在多个平台上进行安装部署，包括Linux、Windows和Mac。每个平台会有对应的系统版本要求，具体可以参见官方说明。</p><img src="https://img.darklorder.com/img/202305121626702.png"/><p>在实际应用中，Docker使用最多的场景是在Linux系统上。本文将基于市面上最常用的Centos和Ubuntu系统，对Docker的安装部署进行介绍。</p><h5 id="初始化环境-CentOS"><a href="#初始化环境-CentOS" class="headerlink" title="初始化环境 CentOS"></a>初始化环境 CentOS</h5><p>Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker</p><p>通过 uname -r 命令查看你当前的内核版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -r<br></code></pre></td></tr></table></figure><p>使用root 权限登录 CentOS。确保 yum 包更新到最新</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum update<br></code></pre></td></tr></table></figure><p>卸载旧版本(如果安装过旧版本的话)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum remove docker  docker-common docker-selinux docker-engine<br></code></pre></td></tr></table></figure><p>安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install -y yum-utils device-mapper-persistent-data lvm2<br></code></pre></td></tr></table></figure><p>设置yum源</p><p>官方源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><p>阿里云源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><p>清华大学源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum-config-manager --add-repo https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><h5 id="安装Docker-CentOS"><a href="#安装Docker-CentOS" class="headerlink" title="安装Docker CentOS"></a>安装Docker CentOS</h5><p>安装docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install docker-ce<br></code></pre></td></tr></table></figure><p>也可以查看所有仓库中所有docker版本，并选择特定版本安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum list docker-ce --showduplicates | <span class="hljs-built_in">sort</span> -r<br>sudo yum install docker-ce-版本号.ce<br></code></pre></td></tr></table></figure><p>启动并加入开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start docker<br>sudo systemctl <span class="hljs-built_in">enable</span> docker<br></code></pre></td></tr></table></figure><p>验证安装是否成功(有client和service两部分表示docker安装启动都成功了)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">docker version<br></code></pre></td></tr></table></figure><h5 id="初始化环境-Ubuntu"><a href="#初始化环境-Ubuntu" class="headerlink" title="初始化环境 Ubuntu"></a>初始化环境 Ubuntu</h5><p>Docker CE 可以安装在 64 位的 x86平台或 ARM 平台上。Ubuntu 发行版中，LTS（Long-Term-Support）长期支持版本，会获得 5 年的升级维护支持，这样的版本会更稳定，因此在生产环境中推荐使用 LTS 版本。</p><p>卸载旧版本</p><p>旧版本的 Docker 称为 docker 或者 docker-engine，使用以下命令卸载旧版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get remove docker \<br>               docker-engine \<br>               docker.io<br></code></pre></td></tr></table></figure><h5 id="安装Docker-Ubuntu"><a href="#安装Docker-Ubuntu" class="headerlink" title="安装Docker Ubuntu"></a>安装Docker Ubuntu</h5><p>使用脚本自动安装</p><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，Ubuntu 系统上可以使用这套安装脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -fsSL get.docker.com -o get-docker.sh<br>sudo sh get-docker.sh --mirror Aliyun<br></code></pre></td></tr></table></figure><p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker CE 的 Edge 版本安装在系统中</p><p>启动Docker CE</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> docker<br>sudo systemctl start docker<br></code></pre></td></tr></table></figure><p>卸载Docker</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">先执行命令：apt-get autoremove docker-ce<br></code></pre></td></tr></table></figure><p>删除 &#x2F;etc&#x2F;apt&#x2F;sources.list.d 目录下的 docker.list 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 修改源地址</span><br>root@ubuntu2004:~<span class="hljs-comment"># vim /etc/apt/sources.list</span><br>deb http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-security main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-updates main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-proposed main restricted universe multiverse<br><br>deb http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<br>deb-src http://mirrors.aliyun.com/ubuntu/ focal-backports main restricted universe multiverse<br><br>root@ubuntu2004:~<span class="hljs-comment">#</span><br>root@ubuntu2004:~<span class="hljs-comment"># visudo</span><br>%sudo ALL=(ALL:ALL) NOPASSWD:ALL<br>root@ubuntu2004:~$ <br><span class="hljs-comment">## 更新本地包数据库</span><br>root@ubuntu2004:~$ apt update<br><span class="hljs-comment">## 更新所有已安装的包（也可以使用 full-upgrade）</span><br>root@ubuntu2004:~$ apt upgrade<br>root@ubuntu2004:~$ apt install screenfetch<br>root@ubuntu2004:~$ apt install vim net-tools aptitude git<br>root@ubuntu2004:~$ apt-get install uml-utilities<br>root@ubuntu2004:~$ apt install bridge-utils<br>root@ubuntu2004:~$ ufw <span class="hljs-built_in">disable</span> <br>root@ubuntu2004:~$ screenfetch<br>                          ./+o+-       dk@ubuntu2004<br>                  yyyyy- -yyyyyy+      OS: Ubuntu 20.04 focal<br>               ://+//////-yyyyyyo      Kernel: x86_64 Linux 5.4.0-91-generic<br>           .++ .:/++++++/-.+sss/`      Uptime: 1m<br>         .:++o:  /++++++++/:--:/-      Packages: 656<br>        o:+o+:++.`..```.-/oo+++++/     Shell: bash 5.0.17<br>       .:+o:+o/.          `+sssoo+/    Resolution: No X Server<br>  .++/+:+oo+o:`             /sssooo.   WM: Not Found<br> /+++//+:`oo+o               /::--:.   GTK Theme: Adwaita [GTK3]<br> \+/+o+++`o++o               ++////.   Disk: 6.9G / 52G (15%)<br>  .++.o+++oo+:`             /dddhhh.   CPU: 11th Gen Intel Core i7-11700K @ 4x 3.6GHz<br>       .+.o+oo:.          `oddhhhh+    GPU: VMware SVGA II Adapter<br>        \+.++o+o``-````.:ohdhhhhh+     RAM: 509MiB / 3907MiB<br>         `:o+++ `ohhhhhhhhyo++os:     <br>           .o:`.syhhhhhhh/.oo++o`     <br>               /osyyyyyyo++ooo+++/    <br>                   ````` +oo+++o\:    <br>                          `oo++.      <br>root@ubuntu2004:~$ <br>root@ubuntu2004:~$ vim /etc/ssh/sshd_config<br>PermitRootLogin <span class="hljs-built_in">yes</span>              <span class="hljs-comment">#允许root直接登录</span><br>PermitEmptyPasswords no          <span class="hljs-comment">#因为设置了root密码，所以需要修改为no</span><br>root@ubuntu2004:~$ service ssh restart  重启ssh服务<br>root@ubuntu2004:~$ vim ~/.bash_profile<br><span class="hljs-built_in">export</span> PS1=<span class="hljs-string">&quot;[\u@\h \W]\\$ &quot;</span><br>root@ubuntu2004:~$ <span class="hljs-built_in">source</span> ~/.bash_profile<br>[root@ubuntua ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## Ubuntu（使用 apt-get 进行安装）</span><br><span class="hljs-comment"># step 1: 安装必要的一些系统工具</span><br>sudo apt-get update<br>sudo apt-get -y install apt-transport-https ca-certificates curl software-properties-common<br><span class="hljs-comment"># step 2: 安装GPG证书</span><br>curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo apt-key add -<br><span class="hljs-comment"># Step 3: 写入软件源信息</span><br>sudo add-apt-repository <span class="hljs-string">&quot;deb [arch=amd64] https://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="hljs-subst">$(lsb_release -cs)</span> stable&quot;</span><br><span class="hljs-comment"># Step 4: 更新并安装Docker-CE</span><br>sudo apt-get -y update<br>sudo apt-get -y install docker-ce<br><span class="hljs-comment"># 安装指定版本的Docker-CE:</span><br><span class="hljs-comment"># Step 1: 查找Docker-CE的版本:</span><br><span class="hljs-comment"># apt-cache madison docker-ce</span><br><span class="hljs-comment">#   docker-ce | 17.03.1~ce-0~ubuntu-xenial | https://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial/stable amd64 Packages</span><br><span class="hljs-comment">#   docker-ce | 17.03.0~ce-0~ubuntu-xenial | https://mirrors.aliyun.com/docker-ce/linux/ubuntu xenial/stable amd64 Packages</span><br><span class="hljs-comment"># Step 2: 安装指定版本的Docker-CE: (VERSION例如上面的17.03.1~ce-0~ubuntu-xenial)</span><br><span class="hljs-comment"># sudo apt-get -y install docker-ce=[VERSION]</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@ubuntu2004:~$ docker version<br>Client: Docker Engine - Community<br> Version:           20.10.11<br> API version:       1.41<br> Go version:        go1.16.9<br> Git commit:        dea9396<br> Built:             Thu Nov 18 00:37:06 2021<br> OS/Arch:           linux/amd64<br> Context:           default<br> Experimental:      <span class="hljs-literal">true</span><br>Got permission denied <span class="hljs-keyword">while</span> trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get <span class="hljs-string">&quot;http://%2Fvar%2Frun%2Fdocker.sock/v1.24/version&quot;</span>: dial unix /var/run/docker.sock: connect: permission denied<br>root@ubuntu2004:~$ <br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">## 镜像加速器</span><br>root@ubuntu2004:~<span class="hljs-comment"># </span><br>root@ubuntu2004:~<span class="hljs-comment"># sudo mkdir -p /etc/docker</span><br>root@ubuntu2004:~<span class="hljs-comment"># sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br>&#123;<br>  <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<br>          <span class="hljs-string">&quot;https://docker.mirrors.ustc.edu.cn&quot;</span>,<br>          <span class="hljs-string">&quot;https://hub-mirror.c.163.com&quot;</span>,<br>          <span class="hljs-string">&quot;https://reg-mirror.qiniu.com&quot;</span><br>  ]<br>&#125;<br>EOF<br>root@ubuntu2004:~<span class="hljs-comment"># systemctl daemon-reload</span><br>root@ubuntu2004:~<span class="hljs-comment"># systemctl restart docker</span><br>root@ubuntu2004:~<span class="hljs-comment"># docker info</span><br> ...<br> Registry Mirrors:<br>  https://docker.mirrors.ustc.edu.cn/<br>  https://hub-mirror.c.163.com/<br>  https://reg-mirror.qiniu.com/<br> Live Restore Enabled: <span class="hljs-literal">false</span><br>root@ubuntu2004:~<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p><a href="https://mp.weixin.qq.com/s/ximknDIUbSPdPSCR3wOC8Q">文章来源于</a></p><p><a href="https://developer.aliyun.com/mirror/docker-ce">引用链接 阿里云</a></p><p><a href="https://developer.aliyun.com/mirror/ubuntu">引用链接 阿里云</a></p><p><a href="https://">文章来源于</a></p>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SRE 到底是什么</title>
    <link href="/2022/08/07/What-is-SRE/"/>
    <url>/2022/08/07/What-is-SRE/</url>
    
    <content type="html"><![CDATA[<p>什么是 SRE？SRE 需要具备什么能力？</p><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>SRE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SRE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>云计算（Cloud Computing）</title>
    <link href="/2022/08/05/Cloud-Computing/"/>
    <url>/2022/08/05/Cloud-Computing/</url>
    
    <content type="html"><![CDATA[<p>关于云计算（Cloud Computing） 看懂云计算、虚拟化和容器，这一篇就够啦！</p><span id="more"></span><h2 id="云计算这个词，相信大家都非常熟悉了。"><a href="#云计算这个词，相信大家都非常熟悉了。" class="headerlink" title="云计算这个词，相信大家都非常熟悉了。"></a>云计算这个词，相信大家都非常熟悉了。</h2><p>云计算的准确定义，有比较多的先驱定义过，具体如下：</p><p><strong>Gartner公司</strong>将云计算定义为：「一种计算方式，能够通过Internet技术将可扩展的和弹性的IT能力作为服务交付给外部用户。」</p><p><strong>Forrester Research公司</strong>，将云计算定义为：「一种标准化的IT性能（服务，软件或者基础设施），以按使用付费和自助服务方式，通过Internet技术进行交付。」</p><p><strong>NIST（美国国家标准和技术研究院）</strong>，将云计算定义为：「云计算是一种模型，可以随时随地，便捷地，按需地从可配置计算资源共享池中获取所需的资源（例如，网络，服务器，存储，应用程序及服务），资源可以快速供给和释放，使管理的工作量和服务提供者的介入降低至最少。这种云模型，包括五个基本特征，三种服务模型和四种部署模型。」</p><p>“云计算”这个词，相信大家都非常熟悉。</p><p>作为信息科技发展的主流趋势，它频繁地出现在我们的眼前。伴随它一起出现的，还有这些概念名词——OpenStack、Hypervisor、KVM、Docker、K8S…</p><center><img src="https://img.darklorder.com/img/202305112240666.jpg"  alt="文件名" style="zoom:50%;" /></center><p>这些名词概念，全部都属于云计算技术领域的范畴。</p><p>对于初学者来说，理解这些概念的具体含义并不是一件容易的事情。</p><p>所以，今天这篇文章，将给大家做一个通俗易懂的介绍，解释这些云计算概念以及它们之间的关系，希望对大家入门有所帮助。</p><h3 id="什么是云计算"><a href="#什么是云计算" class="headerlink" title="什么是云计算"></a>什么是云计算</h3><p>在介绍那些古怪名词之前，我先介绍一下<strong>云计算。</strong></p><p>以前电脑被发明的时候，还没有网络，每个电脑（PC），就是一个单机。</p><center><img src="https://img.darklorder.com/img/202305112242464.jpg"  alt="文件名" style="zoom:50%;" /></center><p>这台单机，包括CPU、内存、硬盘、显卡等硬件。用户在单机上，安装操作系统和应用软件，完成自己的工作。</p><p>后来，有了<strong>网络（Network），</strong>单机与单机之间，可以交换信息，协同工作。</p><center><img src="https://img.darklorder.com/img/202305112243322.jpg"  alt="文件名" style="zoom:50%;" /></center><p>再后来，单机性能越来越强，就有了<strong>服务器（Server）。</strong>人们发现，可以把一些服务器集中起来，放在机房里，然后让用户通过网络，去访问和使用机房里的计算机资源。</p><center><img src="https://img.darklorder.com/img/202305112243607.jpg"  alt="文件名" style="zoom:50%;" /></center><p>再再后来，小型网络变成了大型网络，就有了<strong>互联网（Internet）。</strong>小型机房变成了大型机房，就有了<strong>IDC（Internet Data Center，互联网数据中心）。</strong></p><p>当越来越多的计算机资源和应用服务（Application，例如看网页，下电影）被集中起来，就变成了——<strong>“云计算（Cloud Computing）”。</strong>无数的大型机房，就成了“云端”。</p><center><img src="https://img.darklorder.com/img/202305112244542.jpg"  alt="文件名" style="zoom:50%;" /></center><p>是不是觉得太简单？别急，开始深入。</p><p>云计算的道理是简单的，说白了，就是把计算机资源集中起来，放在网络上。但是，云计算的实现方式，就非常复杂了。</p><p>举个例子，如果你只是在公司小机房摆了一个服务器，开个FTP下载服务，然后用于几个同事之间的电影分享，当然是很简单的。</p><p>如果是“双11”的淘宝购物节，全球几十亿用户访问阿里巴巴的淘宝网站，单日几十<strong>PB（1PB&#x3D;1024TB&#x3D;1024×1024GB）</strong>的访问量，每秒几百<strong>GB</strong>的流量……这个，就不是几根网线几台服务器能解决的了。</p><p>这时，需要设计一个<strong>超大容量、超高并发（同时访问）、超快速度、超强安全</strong>的云计算系统，才能满足业务平稳运行的要求。</p><p>这才是云计算的复杂之处。</p><p>刚才说了，我们把计算机资源放在云端。这个计算机资源，实际上分为好几种层次：</p><p><strong>第一层次，</strong>是最底层的硬件资源，主要包括CPU（计算资源），硬盘（存储资源），还有网卡（网络资源）等。</p><p><strong>第二层次，</strong>要高级一些，我不打算直接使用CPU、硬盘、网卡，我希望你把操作系统（例如Windows、Linux）装好，把数据库软件装好，我再来使用。</p><p><strong>第三层次，</strong>更高级一些，你不但要装好操作系统这些基本的，还要把具体的应用软件装好，例如FTP服务端软件、在线视频服务端软件等，我可以直接使用服务。</p><p>这三种层次，就是大家经常听到的<strong>IaaS、Paas、SaaS。</strong></p><center><img src="https://img.darklorder.com/img/202305112246787.jpg"  alt="文件名" style="zoom:50%;" /></center><p>SaaS: Software-as-a-Service（软件即服务）<br>PaaS: Platform-as-a-Service（平台即服务）<br>IaaS: Infrastructure-as-a-Service（基础设施即服务）</p><p>再补一张图，可能更直观：</p><center><img src="https://img.darklorder.com/img/202305112246104.jpg"  alt="文件名" style="zoom:50%;" /></center><p>目前主流的云计算服务提供商，例如亚马逊AWS、阿里云、华为云、天翼云、腾讯云，说白了，都是为大家提供以上三个层次的云资源。你想要什么，它们就提供什么。你想要多少，它们就提供多少。</p><center><img src="https://img.darklorder.com/img/202305112247813.jpg"  alt="文件名" style="zoom:50%;" /></center><p>继续，继续。</p><p>这么多样化多层次的云计算服务，阿里、华为们又是怎么提供的呢？</p><p>难道说，是人工安排？——</p><p>如果你要八核CPU、16GB内存、500GB硬盘的服务器，阿里临时安排工程师帮你组装？如果你要装CentOS 7.2（一种类Linux操作系统），MySQL 5.5.60（一种数据库系统），阿里也临时让工程师帮你安装配置？</p><p>这显然是不可能的，耗不起人力，也等不起时间。</p><p><strong>于是，就有了各种软件和平台，负责对资源进行快速调用和集中管理。</strong></p><h3 id="什么是虚拟化"><a href="#什么是虚拟化" class="headerlink" title="什么是虚拟化"></a>什么是虚拟化</h3><p>如果要对物理资源进行管理，第一步，就是<strong>“虚拟化”。</strong></p><p>虚拟化是云计算的基础。简单来说，虚拟化就是在一台物理服务器上，运行多台“虚拟服务器”。这种虚拟服务器，也叫<strong>虚拟机（VM，Virtual Machine）。</strong></p><p>从表面来看，这些虚拟机都是独立的服务器，但实际上，它们共享物理服务器的CPU、内存、硬件、网卡等资源。</p><center><img src="https://img.darklorder.com/img/202305112248949.png"  alt="文件名" style="zoom:50%;" /></center><p>物理机，通常称为“宿主机（Host）”。虚拟机，则称为“客户机（Guest）”。</p><p>谁来完成物理资源虚拟化的工作呢？</p><p>就是大名鼎鼎的 <strong>Hypervisor 。</strong></p><p>Hypervisor，汉译过来是“超级监督者”，也叫做VMM（Virtual Machine Monitor，虚拟机监视器）。它不是一款具体的软件，而是一类软件的统称。</p><p>Hypervisor分为两大类：</p><p>第一类，hypervisor直接运行在物理机之上。虚拟机运行在hypervisor之上。第二类，物理机上安装正常的操作系统（例如Linux或Windows），然后在正常操作系统上安装hypervisor，生成和管理虚拟机。</p><center><img src="https://img.darklorder.com/img/202305112249807.jpg"  alt="文件名" style="zoom:50%;" /></center><p>像<strong>VMware、KVM、Xen、Virtual Box，</strong>都属于Hypervisor。</p><p>VMware大家应该很熟悉，就是VMware Workstation。学习Linux的话，很多人都是在windows系统下安装WMware，然后创建Linux虚拟机。</p><center><img src="https://img.darklorder.com/img/202305112250795.jpg"  alt="文件名" style="zoom:50%;" /></center><p>但是，真正厉害的，是但是，真正厉害的，是 <strong>KVM（kernel-based virtual machine，基于Linux内核的虚拟机）。</strong>它是目前最热门最受追捧的虚拟化方案。</p><center><img src="https://img.darklorder.com/img/202305112251358.jpg"  alt="文件名" style="zoom:50%;" /></center><p>KVM这样的Hypervisor软件，实际上是提供了一种虚拟化能力，模拟CPU的运行，更为底层。但是它的用户交互并不良好，不方便使用。</p><p>于是，为了更好地管理虚拟机，就需要OpenStack这样的云管理平台。</p><center><img src="https://img.darklorder.com/img/202305112252953.jpg"  alt="文件名" style="zoom:50%;" /></center><p>关于OpenStack，我之前曾经介绍过（<a href="https://mp.weixin.qq.com/s?__biz=MzI1NTA0MDUyMA==&mid=2456660029&idx=1&sn=1a900a0c45ff77355693e7902c3d8f38&chksm=fda5055acad28c4c34d015b72843ef14c5529f81651cf38daddd1ce4d7e595c9f937f1ee3327&scene=21#wechat_redirect">链接</a>）。它有点像个商店，负责管理商品（计算资源、存储资源、网络资源等），卖给用户，但它本身不制造商品（不具备虚拟化能力），它的商品，来自于KVM。当然，如果不用KVM，也可以用Xen等其它hypervisor。</p><center><img src="https://img.darklorder.com/img/202305112252467.jpg"  alt="文件名" style="zoom:50%;" /></center><p>OpenStack的管理界面，比命令行好多了吧？</p><p>请记住，上面所说的几个概念，包括VM、KVM、OpenStack等，都主要属于IaaS（基础设施即服务）。这个不难理解吧？</p><h3 id="什么是容器"><a href="#什么是容器" class="headerlink" title="什么是容器"></a>什么是容器</h3><p>继续往下说。</p><p>那么，容器是什么呢？大佬们经常说的Docker和K8S，又是什么呢？</p><p>前面我们介绍了虚拟化。人们在使用虚拟化一段时间后，发现它存在一些问题：</p><p>不同的用户，有时候只是希望运行各自的一些简单程序，跑一个小进程。为了不相互影响，就要建立虚拟机。如果建虚拟机，显然浪费就会有点大，而且操作也比较复杂，花费时间也会比较长。</p><p>而且，有的时候，想要迁移自己的服务程序，就要迁移整个虚拟机。显然，迁移过程也会很复杂。</p><p>有没有办法<strong>更灵活快速一</strong>些呢？</p><p>有，这就引入了<strong>“容器（Container）”。</strong></p><p>容器也是虚拟化，但是属于“轻量级”的虚拟化。它的目的和虚拟机一样，都是为了创造“隔离环境”。但是，它又和虚拟机有很大的不同——虚拟机是操作系统级别的资源隔离，而容器本质上是进程级的资源隔离。</p><center><img src="https://img.darklorder.com/img/202305112253652.jpg"  alt="文件名" style="zoom:50%;" /></center><p>虚拟化 VS 容器</p><p>而大家常听说的<strong>Docker，</strong>就是创建容器的工具，是应用容器引擎。</p><p>Docker的中文意思，就是码头工人。而它的LOGO，就是一只鲸鱼背着很多货柜箱。</p><center><img src="https://img.darklorder.com/img/202305112254729.jpg"  alt="文件名" style="zoom:50%;" /></center><p>相比于传统的虚拟机，Docker的优势很明显，它启动时间很快，是秒级，而且对资源的利用率很高（一台主机可以同时运行几千个Docker容器）。此外，它占的空间很小，虚拟机一般要几GB到几十GB，而容器只需要MB级甚至KB级。</p><center><img src="https://img.darklorder.com/img/202305112254245.jpg"  alt="文件名" style="zoom:50%;" /></center><p>除了Docker对容器进行创建之外，我们还需要一个工具，对容器进行<strong>编排。</strong></p><p>这个工具，就是<strong>K8S。</strong></p><p><strong>K8S，</strong>就是<strong>Kubernetes，</strong>中文意思是舵手或导航员。Kubernetes这个单词很长，所以大家把中间8个字母缩写成8，就成了K8S。</p><center><img src="https://img.darklorder.com/img/202305112255615.jpg"  alt="文件名" style="zoom:50%;" /></center><p>K8S是一个容器集群管理系统，主要职责是<strong>容器编排（Container Orchestration）</strong>——启动容器，自动化部署、扩展和管理容器应用，还有回收容器。</p><p>简单来说，K8S有点像容器的保姆。它负责管理容器在哪个机器上运行，监控容器是否存在问题，控制容器和外界的通信，等等。</p><p>通过下面这张K8S系统结构图，就能够看出K8S和容器之间的关系。</p><center><img src="https://img.darklorder.com/img/202305112255372.jpg"  alt="文件名" style="zoom:80%;" /></center><p>除了K8S之外，还有很多种容器管理平台，例如<strong>Compose，Marathon，Swarm，Mesos</strong>等。</p><p>Docker和K8S，关注的不再是基础设施和物理资源，而是应用层，所以，就属于PaaS。明白了吧？</p><p>好啦，今天就先到这里了。再说下去，估计很多人又要晕啦。</p><p>正如文章开头所说，今天主要是介绍KVM、Hypervisor、OpenStack、Docker、K8S这些名词的意思，它们在云计算系统中的位置，以及它们之间的关系。云计算涉及到大量的需求。同一个需求，会有很多不同的技术来实现。同一个技术，往往又有多个不同的厂家互相竞争。所以，概念和名词就会特别多，发展变化也会很快。</p><p>不管怎么说，梳理清楚最关键的名词概念，是学好云计算的第一步。</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzI1NTA0MDUyMA==&mid=2456665252&idx=1&sn=365da9095c9a1ed46886eab43b5bc003&chksm=fda511c3cad298d5679642973577a7380ad050fddc15fde6c5bd81f354aacc787fb9ee86bb7f&scene=21#wechat_redirect">文章来源于鲜枣课堂 ，作者小枣君</a></p>]]></content>
    
    
    <categories>
      
      <category>Cloud Computing</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Cloud Computing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Writing Article</title>
    <link href="/2022/07/31/writing/"/>
    <url>/2022/07/31/writing/</url>
    
    <content type="html"><![CDATA[<p>写作</p><span id="more"></span><h2 id=""><a href="#" class="headerlink" title=""></a></h2><h3 id="写作"><a href="#写作" class="headerlink" title="写作"></a>写作</h3><p>你可以执行下列命令来创建一篇新文章或者新的页面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new [layout] &lt;title&gt;<br></code></pre></td></tr></table></figure><ul><li>您可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。</li></ul><h3 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h3><p>Hexo 有三种默认布局：post、page 和 draft。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 post 相同，都将储存到 source&#x2F;_posts 文件夹。</p><table><thead><tr><th align="center">布局</th><th align="left">路径</th></tr></thead><tbody><tr><td align="center">post</td><td align="left">source&#x2F;_posts</td></tr><tr><td align="center">page</td><td align="left">source</td></tr><tr><td align="center">draft</td><td align="left">source&#x2F;_drafts</td></tr></tbody></table><h3 id="草稿"><a href="#草稿" class="headerlink" title="草稿"></a>草稿</h3><p>刚刚提到了 Hexo 的一种特殊布局：draft，这种布局在建立时会被保存到 source&#x2F;_drafts 文件夹，您可通过 publish 命令将草稿移动到 source&#x2F;_posts 文件夹，该命令的使用方式与 new 十分类似，您也可在命令中指定 layout 来指定布局。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo publish [layout] &lt;title&gt;<br></code></pre></td></tr></table></figure><ul><li>草稿默认不会显示在页面中，您可在执行时加上 –draft 参数，或是把 render_drafts 参数设为 true 来预览草稿。</li></ul><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><p>Front-matter 是文件最上方以 —— 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">---<br>title: Hello World<br><span class="hljs-built_in">date</span>: 2022-07-24 00:00:00<br>---<br></code></pre></td></tr></table></figure><ul><li>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</li></ul><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td><td align="left"><a href="https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0"><code>config.default_layout</code></a></td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td><td align="left">文章的文件名</td></tr><tr><td align="left"><code>date</code></td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left"><code>updated</code></td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left"><code>comments</code></td><td align="left">开启文章的评论功能</td><td align="left">true</td></tr><tr><td align="left"><code>tags</code></td><td align="left">标签（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>categories</code></td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">覆盖文章网址</td><td align="left"></td></tr><tr><td align="left"><code>excerpt</code></td><td align="left">Page excerpt in plain text. Use <a href="https://hexo.io/docs/tag-plugins#Post-Excerpt">this plugin</a> to format the text</td><td align="left"></td></tr><tr><td align="left"><code>disableNunjucks</code></td><td align="left">Disable rendering of Nunjucks tag <code>&#123;&#123; &#125;&#125;</code>&#x2F;<code>&#123;% %&#125;</code> and <a href="https://hexo.io/docs/tag-plugins">tag plugins</a> when enabled</td><td align="left"></td></tr><tr><td align="left"><code>lang</code></td><td align="left">Set the language to override <a href="https://hexo.io/docs/internationalization#Path">auto-detection</a></td><td align="left">Inherited from <code>_config.yml</code></td></tr></tbody></table><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">删除文件夹<span class="hljs-built_in">source</span>/_posts下目标文章markdown文件<br>删除.deploy_git文件夹<br>执行hexo cl 后，再执行 hexo g ，hexo s 即可。<br></code></pre></td></tr></table></figure><h3 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h3><p>创建 分类 页并添加 tpye 属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page categories<br></code></pre></td></tr></table></figure><p>source&#x2F;categories&#x2F;index.md 添加 categories 属性</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs md">---<br>title: categories<br>date: 2022-07-24 00:00:00<br><span class="hljs-section">type: &quot;categories&quot;</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><p>给文章添加 categories 属性</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs md">---<br>title: 写作<br>date: 2022-07-31 00:00:00<br>categories:<br><span class="hljs-section">- Hello World</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><ul><li>打开需要添加分类的文章，为其添加categories属性。</li><li>下方的categories: Hello World 表示添加这篇文章到 Hello World 这个分类。</li><li>注意：hexo一篇文章只能属于一个分类，也就是说如果在 “- Hello World” 下方添加 “-xxx”，hexo不会产生两个分类，</li><li>而是把分类嵌套（即该文章属于 “- Hello World” 下的 “-xxx” 分类）。</li></ul><h3 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h3><p>创建 标签 页并添加 tpye 属性</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page tags<br></code></pre></td></tr></table></figure><p>source&#x2F;tags&#x2F;index.md 添加 tags 属性</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs md">---<br>title: tags<br>date: 2022-07-24 00:00:00<br><span class="hljs-section">type: &quot;tags&quot;</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><p>给文章添加 tags 属性</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs md">---<br>title: 写作<br>date: 2022-07-25 00:00:00<br>categories:<br><span class="hljs-bullet">-</span> Hello World<br>tags:<br><span class="hljs-bullet">-</span> Hello <br><span class="hljs-section">- World</span><br><span class="hljs-section">---</span><br></code></pre></td></tr></table></figure><ul><li>打开需要添加标签的文章，为其添加tags属性。下方的tags:下方的- Hello - World 就是这篇文章的标签了</li><li>至此，成功给文章添加分类，点击首页的 “标签” 可以看到该标签下的所有文章。</li><li>当然，只有添加了tags: xxx的文章才会被收录到首页的 “标签” 中。</li></ul>]]></content>
    
    
    <categories>
      
      <category>Writing Article</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Writing Article</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/07/24/hello-world/"/>
    <url>/2022/07/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>用户手册</p><span id="more"></span><p>主题 GitHub: <a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>主题 用户手册: <a href="https://hexo.fluid-dev.com/docs/">https://hexo.fluid-dev.com/docs/</a></p><h2 id="用户手册"><a href="#用户手册" class="headerlink" title="用户手册"></a>用户手册</h2><h3 id="自动更新主题"><a href="#自动更新主题" class="headerlink" title="自动更新主题"></a>自动更新主题</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm update            <span class="hljs-comment">#  更新所有</span><br>$ npm update --save hexo-theme-fluid            <span class="hljs-comment"># 更新主题</span><br></code></pre></td></tr></table></figure><h3 id="手动更新主题"><a href="#手动更新主题" class="headerlink" title="手动更新主题"></a>手动更新主题</h3><p>修改根目录的package.json文件，将对应插件名称所对应的版本号更改为要更新的版本号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ npm <span class="hljs-built_in">ls</span>            <span class="hljs-comment"># 查询当前项目已安装插件版本</span><br>$ npm install --save            <span class="hljs-comment"># 更新</span><br></code></pre></td></tr></table></figure><h3 id="部署发布"><a href="#部署发布" class="headerlink" title="部署发布"></a>部署发布</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo clean            <span class="hljs-comment"># 清理缓存 clean</span><br>$ hexo generate         <span class="hljs-comment"># 构建 build</span><br>$ hexo server           <span class="hljs-comment"># 本地启动 server</span><br>$ hexo deploy           <span class="hljs-comment"># 自动部署 deploy</span><br></code></pre></td></tr></table></figure><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">&quot;博客配置&quot;</span> <span class="hljs-string">指的是</span> <span class="hljs-string">根目录下的</span> <span class="hljs-string">_config.yml</span><br><span class="hljs-string">&quot;主题配置&quot;</span> <span class="hljs-string">指的是</span> <span class="hljs-string">theme/fluid/_config.yml</span><br></code></pre></td></tr></table></figure><h3 id="顶部大图"><a href="#顶部大图" class="headerlink" title="顶部大图"></a>顶部大图</h3><p>主题配置中，每个页面都有名为 banner_img 的属性，可以使用本地图片的相对路径，也可以为外站链接。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml">  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span>          <span class="hljs-comment"># 对应存放在 /source/img/default.png</span><br>  <span class="hljs-attr">banner_img:</span> <span class="hljs-string">https://xxxx.com/img/default.png</span><br>  <br><span class="hljs-comment"># 高度</span><br>  <span class="hljs-string">鉴于每个人的喜好不同，开放对页面</span> <span class="hljs-string">banner_img</span> <span class="hljs-string">高度的控制。</span><br>  <span class="hljs-string">主题配置中，每个页面对应的</span> <span class="hljs-string">banner_img_height</span> <span class="hljs-string">属性，有效值为</span> <span class="hljs-number">0</span> <span class="hljs-bullet">-</span> <span class="hljs-number">100</span><span class="hljs-string">。100</span> <span class="hljs-string">即为全屏，个人建议</span> <span class="hljs-number">70</span> <span class="hljs-string">以上。</span><br><span class="hljs-comment"># 蒙版透明度</span><br>  <span class="hljs-string">主题配置中，每个页面对应的</span> <span class="hljs-string">banner_mask_alpha</span> <span class="hljs-string">属性，有效值为</span> <span class="hljs-number">0</span> <span class="hljs-bullet">-</span> <span class="hljs-number">1.0</span><span class="hljs-string">，</span> <span class="hljs-number">0</span> <span class="hljs-string">是完全透明（无蒙版），1</span> <span class="hljs-string">是完全不透明</span><br></code></pre></td></tr></table></figure><h3 id="博客标题"><a href="#博客标题" class="headerlink" title="博客标题"></a>博客标题</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">blog_title:</span> <span class="hljs-string">博客标题</span><br></code></pre></td></tr></table></figure><h3 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">menu:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;home&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-home-fill&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;archive&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/archives/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-archive-fill&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;category&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/categories/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-category-fill&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;tag&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/tags/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-tags-fill&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;links&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/links/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-link-fill&quot;</span> &#125;<br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&quot;about&quot;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&quot;/about/&quot;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&quot;iconfont icon-user-fill&quot;</span> &#125;<br></code></pre></td></tr></table></figure><ul><li>key: 用于关联有语言配置，如不存在关联则显示 key 本身的值</li><li>link: 跳转链接</li><li>icon: 图标的 css class，可以省略（即没有图标），主题内置图标详见这里</li><li>name: 强制使用此名称显示（不再按语言配置显示），可省略</li></ul><p>另外支持二级菜单（下拉菜单），配置写法如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">menu:</span><br>  <span class="hljs-bullet">-</span> &#123;<br>      <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;文档&#x27;</span>,<br>      <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;iconfont icon-books&#x27;</span>,<br>      <span class="hljs-attr">submenu:</span> [<br>        &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;主题博客&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://hexo.fluid-dev.com/&#x27;</span> &#125;,<br>        &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;配置指南&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://hexo.fluid-dev.com/docs/guide/&#x27;</span> &#125;,<br>        &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;图标用法&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://hexo.fluid-dev.com/docs/icon/&#x27;</span> &#125;<br>      ]<br>  &#125;<br></code></pre></td></tr></table></figure><h3 id="全局字体"><a href="#全局字体" class="headerlink" title="全局字体"></a>全局字体</h3><p>设置单独的页面，可以直接在 markdown 里通过 style 标签实现：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">&lt;style&gt;</span><br>  <span class="hljs-string">/*</span> <span class="hljs-string">设置整个页面的字体</span> <span class="hljs-string">*/</span><br>  <span class="hljs-string">html,</span> <span class="hljs-string">body,</span> <span class="hljs-string">.markdown-body</span> &#123;<br>    <span class="hljs-attr">font-family:</span> <span class="hljs-string">KaiTi</span>,<span class="hljs-string">&quot;Microsoft YaHei&quot;</span>,<span class="hljs-string">Georgia</span>, <span class="hljs-string">sans</span>, <span class="hljs-string">serif;</span><br>    <span class="hljs-attr">font-size:</span> <span class="hljs-string">15px;</span><br>  &#125;<br><br>  <span class="hljs-string">/*</span> <span class="hljs-string">只设置</span> <span class="hljs-string">markdown</span> <span class="hljs-string">字体</span> <span class="hljs-string">*/</span><br>  <span class="hljs-string">.markdown-body</span> &#123;<br>    <span class="hljs-attr">font-family:</span> <span class="hljs-string">KaiTi</span>,<span class="hljs-string">&quot;Microsoft YaHei&quot;</span>,<span class="hljs-string">Georgia</span>, <span class="hljs-string">sans</span>, <span class="hljs-string">serif;</span><br>    <span class="hljs-attr">font-size:</span> <span class="hljs-string">15px;</span><br>  &#125;<br><span class="hljs-string">&lt;/style&gt;</span><br></code></pre></td></tr></table></figure><h3 id="强制全局-HTTPS"><a href="#强制全局-HTTPS" class="headerlink" title="强制全局 HTTPS"></a>强制全局 HTTPS</h3><p>这种情况可以在主题配置中开启此配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">force_https:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><h3 id="自定义-JS-x2F-CSS-x2F-HTML"><a href="#自定义-JS-x2F-CSS-x2F-HTML" class="headerlink" title="自定义 JS &#x2F; CSS &#x2F; HTML"></a>自定义 JS &#x2F; CSS &#x2F; HTML</h3><p>如果你想引入外部的 JS、CSS（比如 IconFont）或 HTML，可以通过以下主题配置，具体见注释：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 指定自定义 js 文件路径，路径是相对 source 目录</span><br><span class="hljs-attr">custom_js:</span> <span class="hljs-string">/js/custom.js</span><br><br><span class="hljs-comment"># 指定自定义 css 文件路径，路径是相对 source 目录</span><br><span class="hljs-attr">custom_css:</span> <span class="hljs-string">/css/custom.css</span><br><br><span class="hljs-comment"># 自定义 &lt;head&gt; 节点中的 HTML 内容</span><br><span class="hljs-attr">custom_head:</span> <span class="hljs-string">&#x27;&lt;meta name=&quot;key&quot; content=&quot;value&quot;&gt;&#x27;</span><br><br><span class="hljs-comment"># 自定义底部 HTML 内容（位于 footer 上方），也可用于外部引入 js css 这些操作，注意不要和 post.custom 配置冲突</span><br><span class="hljs-attr">custom_html:</span> <span class="hljs-string">&#x27;&lt;link rel=&quot;stylesheet&quot; href=&quot;//at.alicdn.com/t/font_1067060_qzomjdt8bmp.css&quot;&gt;&#x27;</span><br></code></pre></td></tr></table></figure><h3 id="Slogan-打字机"><a href="#Slogan-打字机" class="headerlink" title="Slogan(打字机)"></a>Slogan(打字机)</h3><p>标题文字默认开启了打字机动效，相关配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">fun_features:</span><br>  <span class="hljs-attr">typing:</span> <span class="hljs-comment"># 为 subtitle 添加打字机效果</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">typeSpeed:</span> <span class="hljs-number">70</span> <span class="hljs-comment"># 打印速度</span><br>    <span class="hljs-attr">cursorChar:</span> <span class="hljs-string">&quot;_&quot;</span> <span class="hljs-comment"># 游标字符</span><br>    <span class="hljs-attr">loop:</span> <span class="hljs-literal">false</span> <span class="hljs-comment"># 是否循环播放效果</span><br></code></pre></td></tr></table></figure><h3 id="文章摘要"><a href="#文章摘要" class="headerlink" title="文章摘要"></a>文章摘要</h3><p>若要手动指定摘要，使用 <!-- more --> MD文档里划分，如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">正文的一部分作为摘要</span><br><span class="hljs-string">&lt;!--</span> <span class="hljs-string">more</span> <span class="hljs-string">--&gt;</span><br><span class="hljs-string">余下的正文</span><br></code></pre></td></tr></table></figure><p>或者在 Front-matter 里设置 excerpt 字段，如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">这是标题</span><br><span class="hljs-attr">excerpt:</span> <span class="hljs-string">这是摘要</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><ul><li>无论哪种摘要都最多显示 3 行，当屏幕宽度不足时会隐藏部分摘要。</li></ul><h3 id="文章跳转方式"><a href="#文章跳转方式" class="headerlink" title="文章跳转方式"></a>文章跳转方式</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">index:</span><br>  <span class="hljs-attr">post_url_target:</span> <span class="hljs-string">_blank</span><br></code></pre></td></tr></table></figure><ul><li>_blank：新标签页打开</li><li>_self：当前标签页打开</li></ul><h3 id="隐藏文章"><a href="#隐藏文章" class="headerlink" title="隐藏文章"></a>隐藏文章</h3><p>如果想把某些文章隐藏起来，不在首页和其他分类里展示，可以在文章开头 Front-matter 中配置 hide: true 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-07-24 00:00:00</span><br><span class="hljs-attr">hide:</span> <span class="hljs-literal">true</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><ul><li>隐藏会使文章在分类和标签类里都不显示</li><li>隐藏后依然可以通过文章链接访问</li></ul><h3 id="文章排序"><a href="#文章排序" class="headerlink" title="文章排序"></a>文章排序</h3><p>如果想手动将某些文章固定在首页靠前的位置，在文章开头 Front-matter 中配置 sticky 属性：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-07-24 00:00:00</span><br><span class="hljs-attr">sticky:</span> <span class="hljs-number">100</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><ul><li>sticky 数值越大，该文章越靠前，达到类似于置顶的效果，其他未设置的文章依然按默认排序。</li></ul><h3 id="文章在首页的封面图"><a href="#文章在首页的封面图" class="headerlink" title="文章在首页的封面图"></a>文章在首页的封面图</h3><p>对于单篇文章，在文章开头 Front-matter 中配置 index_img 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-07-24 00:00:00</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><h3 id="文章页顶部大图"><a href="#文章页顶部大图" class="headerlink" title="文章页顶部大图"></a>文章页顶部大图</h3><p>默认显示主题配置中的 post.banner_img，如需要设置单个文章的 Banner，在 Front-matter 中指定 banner_img 属性。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">文章标题</span><br><span class="hljs-attr">tags:</span> [<span class="hljs-string">Hexo</span>, <span class="hljs-string">Fluid</span>]<br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/post_banner.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-07-24 00:00:00</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是文章内容</span><br></code></pre></td></tr></table></figure><h3 id="文章内容本地图片"><a href="#文章内容本地图片" class="headerlink" title="文章内容本地图片"></a>文章内容本地图片</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-type">![](/img/example.jpg)</span><br></code></pre></td></tr></table></figure><h3 id="日期-x2F-字数-x2F-阅读时长-x2F-阅读数"><a href="#日期-x2F-字数-x2F-阅读时长-x2F-阅读数" class="headerlink" title="日期&#x2F;字数&#x2F;阅读时长&#x2F;阅读数"></a>日期&#x2F;字数&#x2F;阅读时长&#x2F;阅读数</h3><p>显示在文章页大标题下的文章信息，除了作者和阅读次数，其他功能都是默认开启的。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">meta:</span><br>    <span class="hljs-attr">author:</span>  <span class="hljs-comment"># 作者，优先根据 front-matter 里 author 字段，其次是 hexo 配置中 author 值</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>    <span class="hljs-attr">date:</span>  <span class="hljs-comment"># 文章日期，优先根据 front-matter 里 date 字段，其次是 md 文件日期</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;dddd, MMMM Do YYYY, h:mm a&quot;</span>  <span class="hljs-comment"># 格式参照 ISO-8601 日期格式化</span><br>    <span class="hljs-attr">wordcount:</span>  <span class="hljs-comment"># 字数统计</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 字&quot;</span>  <span class="hljs-comment"># 显示的文本，&#123;&#125;是数字的占位符（必须包含)，下同</span><br>    <span class="hljs-attr">min2read:</span>  <span class="hljs-comment"># 阅读时间</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 分钟&quot;</span><br>    <span class="hljs-attr">views:</span>  <span class="hljs-comment"># 阅读次数</span><br>      <span class="hljs-attr">enable:</span> <span class="hljs-literal">false</span><br>      <span class="hljs-attr">source:</span> <span class="hljs-string">&quot;leancloud&quot;</span>  <span class="hljs-comment"># 统计数据来源，可选：leancloud | busuanzi   注意不蒜子会间歇抽风</span><br>      <span class="hljs-attr">format:</span> <span class="hljs-string">&quot;&#123;&#125; 次&quot;</span><br></code></pre></td></tr></table></figure><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>将脚注写在文末，比如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">正文</span><br><br><span class="hljs-comment">## 参考</span><br>[<span class="hljs-string">^1</span>]<span class="hljs-string">:</span> <span class="hljs-string">参考资料1</span><br>[<span class="hljs-string">^2</span>]<span class="hljs-string">:</span> <span class="hljs-string">参考资料2</span><br></code></pre></td></tr></table></figure><h3 id="Tag-插件"><a href="#Tag-插件" class="headerlink" title="Tag 插件"></a>Tag 插件</h3><p>在 markdown 中加入如下的代码来使用便签</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs md">&#123;% note success %&#125;<br>文字 或者 <span class="hljs-code">`markdown`</span> 均可<br>&#123;% endnote %&#125;<br><br>使用时 &#123;% note primary %&#125; 和 &#123;% endnote %&#125; 需单独一行，否则会出现问题<br></code></pre></td></tr></table></figure><p>或者使用 HTML 形式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></figure><p class="note note-primary">primary</p><p class="note note-secondary">secondary</p><p class="note note-success">success</p><p class="note note-danger">danger</p><p class="note note-warning">warning</p><p class="note note-info">info</p><p class="note note-light">light</p><h3 id="行内标签"><a href="#行内标签" class="headerlink" title="行内标签"></a>行内标签</h3><p>在 markdown 中加入如下的代码来使用 Label：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs md">&#123;% label primary @text %&#125;<br><br>若使用 &#123;% label primary @text %&#125;，text 不能以 @ 开头<br></code></pre></td></tr></table></figure><p>或者使用 HTML 形式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;label label-primary&quot;</span>&gt;</span>Label<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></figure><p><span class="label label-primary">primary</span> <span class="label label-default">default</span> <span class="label label-info">info</span> <span class="label label-success">success</span> <span class="label label-warning">warning</span> <span class="label label-danger">danger</span></p><h3 id="组图"><a href="#组图" class="headerlink" title="组图"></a>组图</h3><p>如果想把多张图片按一定布局组合显示，你可以在 markdown 中按如下格式：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs md">&#123;% gi total n1-n2-... %&#125;<br>  ![](<span class="hljs-link">url</span>)<br>  ![](<span class="hljs-link">url</span>)<br>  ![](<span class="hljs-link">url</span>)<br>  ![](<span class="hljs-link">url</span>)<br>  ![](<span class="hljs-link">url</span>)<br>&#123;% endgi %&#125;<br><br>total：图片总数量，对应中间包含的图片 url 数量<br>n1-n2-...：每行的图片数量，可以省略，默认单行最多 3 张图，求和必须相等于 total，否则按默认样式<br>如下图为 &#123;% gi 5 3-2 %&#125; 示例，代表共 5 张图，第一行 3 张图，第二行 2 张图。<br></code></pre></td></tr></table></figure><div class="group-image-container"><div class="group-image-row"><div class="group-image-wrap"><img src="/img/avatar.png"></div><div class="group-image-wrap"><img src="/img/avatar.png"></div><div class="group-image-wrap"><img src="/img/avatar.png"></div></div><div class="group-image-row"><div class="group-image-wrap"><img src="/img/avatar.png"></div><div class="group-image-wrap"><img src="/img/avatar.png"></div></div></div><h3 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a>标签页</h3><p>标签是以词云的形式展示，标签的大小和颜色会根据标签下的文章数量变化，相关配置如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">tag:</span><br>  <span class="hljs-attr">tagcloud:</span><br>    <span class="hljs-attr">min_font:</span> <span class="hljs-number">15</span><br>    <span class="hljs-attr">max_font:</span> <span class="hljs-number">30</span><br>    <span class="hljs-attr">unit:</span> <span class="hljs-string">px</span>  <span class="hljs-comment"># 字号单位</span><br>    <span class="hljs-attr">start_color:</span> <span class="hljs-string">&quot;#BBBBEE&quot;</span><br>    <span class="hljs-attr">end_color:</span> <span class="hljs-string">&quot;#337ab7&quot;</span><br></code></pre></td></tr></table></figure><h3 id="友情链接页"><a href="#友情链接页" class="headerlink" title="友情链接页"></a>友情链接页</h3><p>友情链接页用于展示好友的博客入口，默认关闭，开启需要先在 navbar 项中将 links 的注释(#号)删掉：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">navbar:</span><br>  <span class="hljs-attr">menu:</span><br>    <span class="hljs-bullet">-</span> &#123; <span class="hljs-attr">key:</span> <span class="hljs-string">&#x27;links&#x27;</span>, <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;/links/&#x27;</span>, <span class="hljs-attr">icon:</span> <span class="hljs-string">&#x27;iconfont icon-link-fill&#x27;</span> &#125;<br></code></pre></td></tr></table></figure><p>然后找到 links 的配置项，对页面内容进行配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">links:</span><br>  <span class="hljs-attr">items:</span><br>    <span class="hljs-bullet">-</span> &#123;<br>      <span class="hljs-attr">title:</span> <span class="hljs-string">&#x27;Fluid Docs&#x27;</span>,<br>      <span class="hljs-attr">intro:</span> <span class="hljs-string">&#x27;主题使用指南&#x27;</span>,<br>      <span class="hljs-attr">link:</span> <span class="hljs-string">&#x27;https://hexo.fluid-dev.com/docs/&#x27;</span>,<br>      <span class="hljs-attr">avatar:</span> <span class="hljs-string">&#x27;/img/favicon.png&#x27;</span><br>    &#125;<br>  <span class="hljs-attr">default_avatar:</span> <span class="hljs-string">/img/avatar.png</span><br></code></pre></td></tr></table></figure><ul><li>title: 友链站的标题</li><li>intro: 站点或博主的简介，可省略</li><li>link: 跳转链接</li><li>avatar: 头像图片，可省略</li><li>default_avatar: 成员的默认头像（仅在指定了头像并且加载失败时生效）</li></ul><p>友链页也可以使用自定义区域和评论，使用方式类似于文章页，具体见配置项与相关注释。</p><h3 id="自定义页面"><a href="#自定义页面" class="headerlink" title="自定义页面"></a>自定义页面</h3><p>如果想单独生成一个页面，步骤和创建「关于页」类似<br>先用命令行创建页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new page example<br></code></pre></td></tr></table></figure><p>创建成功后编辑博客目录下 &#x2F;source&#x2F;example&#x2F;index.md：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">subtitle:</span> <span class="hljs-string">若不填默认是</span> <span class="hljs-string">title</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里写正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><p>正文默认没有 Markdown 样式，如果希望和文章相同的样式，可以加上：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;markdown-body&quot;</span>&gt;</span><br>正文<br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure><p>页面的参数配置可以在主题配置中统一设置：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html">page:<br>  banner_img: /img/default.png<br>  banner_img_height: 70<br>  banner_mask_alpha: 0.3<br></code></pre></td></tr></table></figure><p>也可以直接在 Front-matter 里单独设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">example</span><br><span class="hljs-attr">banner_img:</span> <span class="hljs-string">/img/default.png</span><br><span class="hljs-attr">banner_img_height:</span> <span class="hljs-number">60</span><br><span class="hljs-attr">banner_mask_alpha:</span> <span class="hljs-number">0.5</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-string">这里可以写正文</span><br></code></pre></td></tr></table></figure><h3 id="Fluid-注入代码"><a href="#Fluid-注入代码" class="headerlink" title="Fluid 注入代码"></a>Fluid 注入代码</h3><p>进入博客目录下 scripts 文件夹（如不存在则创建），在里面创建任意名称的 js 文件，在文件中写入如下内容：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">filter</span>.<span class="hljs-title function_">register</span>(<span class="hljs-string">&#x27;theme_inject&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">injects</span>) &#123;<br>  injects.<span class="hljs-property">header</span>.<span class="hljs-title function_">file</span>(<span class="hljs-string">&#x27;default&#x27;</span>, <span class="hljs-string">&#x27;source/_inject/test1.ejs&#x27;</span>, &#123; <span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;value&#x27;</span> &#125;, -<span class="hljs-number">1</span>);<br>  injects.<span class="hljs-property">footer</span>.<span class="hljs-title function_">raw</span>(<span class="hljs-string">&#x27;default&#x27;</span>, <span class="hljs-string">&#x27;&lt;script async src=&quot;https://xxxxxx&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;&#x27;</span>);<br>&#125;);<br></code></pre></td></tr></table></figure><ul><li>header 和 footer 是注入点的名称，表示代码注入到页面的什么位置；</li><li>file 方法表示注入的是文件，第一个参数下面介绍，第二个参数则是文件的路径，第三个参数是传入文件的参数（可省略），第四个参数是顺序（可省略）；</li><li>raw 方法表示注入的是原生代码，第一个参数下面介绍，第二个参数则是一句原生的 HTML 语句；</li><li>default 表示注入的键名，可以使用任意键名，同一个注入点下的相同键名会使注入的内容覆盖，而不同键名则会让内容依次排列（默认按执行先后顺序，可通过 file 第四个参数指定），这里 default 为主题默认键名，通常会替换掉主题默认的组件；</li></ul><p>主题目前提供的注入点如下：</p><table><thead><tr><th>注入点名称</th><th>注入范围</th><th>存在 <code>default</code> 键</th></tr></thead><tbody><tr><td>head</td><td><code>&lt;head&gt;</code> 标签中的结尾</td><td>无</td></tr><tr><td>header</td><td><code>&lt;header&gt;</code> 标签中所有内容</td><td>有</td></tr><tr><td>bodyBegin</td><td><code>&lt;body&gt;</code> 标签中的开始</td><td>无</td></tr><tr><td>bodyEnd</td><td><code>&lt;body&gt;</code> 标签中的结尾</td><td>无</td></tr><tr><td>footer</td><td><code>&lt;footer&gt;</code> 标签中所有内容</td><td>有</td></tr><tr><td>postMetaTop</td><td>文章页 <code>&lt;header&gt;</code> 标签中 meta 部分内容</td><td>有</td></tr><tr><td>postMetaBottom</td><td>文章页底部 meta 部分内容</td><td>有</td></tr><tr><td>postMarkdownBegin</td><td><code>&lt;div class=&quot;markdown-body&quot;&gt;</code> 标签中的开始</td><td>无</td></tr><tr><td>postMarkdownEnd</td><td><code>&lt;div class=&quot;markdown-body&quot;&gt;</code> 标签中的结尾</td><td>无</td></tr><tr><td>postLeft</td><td>文章页左侧边栏</td><td>有</td></tr><tr><td>postRight</td><td>文章页右侧边栏</td><td>有</td></tr><tr><td>postCopyright</td><td>文章页版权信息</td><td>有</td></tr><tr><td>postRight</td><td>文章页右侧边栏</td><td>无</td></tr><tr><td>postComments</td><td>文章页评论</td><td>有</td></tr><tr><td>pageComments</td><td>自定义页评论</td><td>有</td></tr><tr><td>linksComments</td><td>友链页评论</td><td>有</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>Hello World</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hello World</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
